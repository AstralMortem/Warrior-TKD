# Generated by Django 5.0.2 on 2024-02-21 16:41

import django.db.models.deletion
import django.utils.timezone
import django_jsonform.models.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Belt',
            fields=[
                ('code', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Куп')),
                ('photo', models.ImageField(upload_to='belts', verbose_name='Фото')),
                ('title', models.CharField(max_length=250, verbose_name='Назва поясу')),
            ],
            options={
                'verbose_name': 'Пояс',
                'verbose_name_plural': 'Пояси',
            },
        ),
        migrations.CreateModel(
            name='BeltDescription',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='description', serialize=False, to='account.belt', verbose_name='Норматив поясу')),
                ('ofp', models.TextField(blank=True, verbose_name='ОФП')),
            ],
            options={
                'verbose_name': 'Норматив',
                'verbose_name_plural': 'Нормативи',
            },
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/avatars', verbose_name='Аватар')),
                ('full_name', models.CharField(max_length=250, verbose_name='ПІБ')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Пошта')),
                ('mobile', models.CharField(blank=True, verbose_name='Телефон')),
                ('gender', models.CharField(choices=[('m', 'Чоловік'), ('f', 'Жінка')], default='m', max_length=1, verbose_name='Стать')),
                ('judge_type', models.CharField(blank=True, choices=[('judge_1', 'Суддя 2-ї категорії'), ('judge_2', 'Суддя 1-ї категорії'), ('judge_3', 'Суддя національної категорії'), ('judge_4', 'Суддя міжнародної категорії B'), ('judge_5', 'Суддя міжнародної категорії A')], max_length=7, null=True, verbose_name='Категорія судді')),
                ('coach_type', models.CharField(blank=True, choices=[('coach_1', 'Помічник тренера'), ('coach_2', 'Тренер початкової підготовки'), ('coach_3', 'Тренер національного класу'), ('coach_4', 'Інструктор міжнародного класу'), ('coach_5', 'Майстер-інструктор міжнародного класу')], max_length=7, null=True, verbose_name='Категорія тренера')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День народження')),
                ('itf_code', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Код в базі itf-ua')),
                ('itf_link', models.URLField(blank=True, null=True, verbose_name='Силка на itf-ua')),
                ('links', django_jsonform.models.fields.ArrayField(base_field=models.URLField(blank=True, null=True, verbose_name='Силка на соціальну мережу'), blank=True, null=True, size=8)),
                ('is_active', models.BooleanField(default=True, verbose_name='Акаунт активний?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Акаунт Тренера?')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата приєднання')),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Тренер')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('belt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.belt', verbose_name='Пояс')),
            ],
            options={
                'verbose_name': 'Учасник',
                'verbose_name_plural': 'Учасники',
            },
        ),
    ]
