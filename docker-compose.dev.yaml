version: '3.6'

services:
  postgres:
    image: postgres
    container_name: warrior-postgres-dev
    environment:
      POSTGRES_DB: "warrior"
      POSTGRES_USER: "warrior"
      POSTGRES_PASSWORD: "warrior"
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    expose:
      - 5432

  backend-dev:
    container_name: warrior-backend-dev
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile.dev
    command: bash -c "python manage.py makemigrations && python manage.py migrate --noinput && python manage.py collectstatic --noinput && gunicorn admin.wsgi:application --workers 5 --log-level debug --timeout 120 --bind 0.0.0.0:8000 --reload"
    ports:
      - "8000:8000"
    env_file:
      ./.env.dev
    volumes:
      - ./backend:/src
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-dev.rule=Host(`api.warrior.localhost`)"
      - "traefik.http.routers.backend-dev.entrypoints=web"

  frontend-dev:
    container_name: warrior-frontend
    build: 
      context: .
      dockerfile: ./docker/frontend/Dockerfile.dev
    command: "yarn run dev"
    ports:
      - "3000:3000"
      - "24678:24678"
    env_file:
      - ./.env.dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-dev.rule=Host(`warrior.localhost`)"
      - "traefik.http.routers.frontend-dev.entrypoints=web"


    volumes:
      - ./frontend:/src
      - node_modules:/src/node_modules

  reverse-proxy:
    image: traefik:v2.10
    container_name: reverse-proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./docker/traefik/traefik.dev.yaml:/etc/traefik/traefik.yaml

volumes:
  pgdbdata:
  node_modules: